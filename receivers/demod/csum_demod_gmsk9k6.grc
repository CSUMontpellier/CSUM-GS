options:
  parameters:
    author: CSUM
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: CSUM
    description: Demodulates signals from CSUM satellites in GMSK 9600 bps and deframe
      their AX.25 packets.
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: csum_demod_gmsk9k6
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: GMSK9k6 demodulator and AX.25 deframer for CSUM satellites.
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: baudrate
  id: variable
  parameters:
    comment: ''
    value: '9600'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 12.0]
    rotation: 0
    state: true
- name: demod_samp_rate
  id: variable
  parameters:
    comment: ''
    value: '19200'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 84.0]
    rotation: 0
    state: enabled
- name: in_samp_rate
  id: variable
  parameters:
    comment: ''
    value: '153600'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 12.0]
    rotation: 0
    state: enabled
- name: analog_quadrature_demod_cf_0_0
  id: analog_quadrature_demod_cf
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gain: demod_samp_rate/(2*math.pi*baudrate/4)
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [792, 316.0]
    rotation: 0
    state: enabled
- name: blocks_file_source_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: "- Output CF32 IQs at a rate of 153600 Hz.\n- If your IQs file have a\
      \ different sampling rate, \nuse a \"Rational Resampler\" right after this block\n\
      to convert the sampling rate."
    file: iqs_file_path
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 284.0]
    rotation: 0
    state: true
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: throttle_test
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 308.0]
    rotation: 0
    state: enabled
- name: digital_symbol_sync_xx_0
  id: digital_symbol_sync_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: digital.constellation_bpsk().base()
    damping: '0.0001'
    loop_bw: '0.045'
    max_dev: '0.00268'
    maxoutbuf: '0'
    minoutbuf: '0'
    nfilters: '128'
    osps: '1'
    pfb_mf_taps: '[]'
    resamp_type: digital.IR_MMSE_8TAP
    sps: demod_samp_rate//baudrate
    ted_gain: '0.038'
    ted_type: digital.TED_ZERO_CROSSING
    type: ff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 260.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\n\n\nclass blk(gr.sync_block):  # other\
      \ base classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded\
      \ Python Block example - a simple multiply const\"\"\"\n\n    pkt_cntr = 0\n\
      \n    def __init__(self):  # only default arguments here\n        \"\"\"arguments\
      \ to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Embedded Python Block',   # will show\
      \ up in GRC\n            in_sig=None,\n            out_sig=None\n        )\n\
      \        # if an attribute with the same name as a parameter is found,\n   \
      \     # a callback is registered (properties work, too).\n        self.message_port_register_in(pmt.intern(\"\
      msgin\"))\n        self.set_msg_handler(pmt.intern('msgin'), self.msg_handler)\n\
      \n    def msg_handler(self, msg):\n        self.pkt_cntr += 1\n        print(\"\
      --------------------------\")\n        print(bytearray(pmt.to_python(pmt.cdr(msg))).hex(\"\
      \ \"))\n        # print(\"Received \"+str(self.pkt_cntr)+\" packets.\")\n\n\
      \    def stop(self):\n        print(\"Received \"+str(self.pkt_cntr)+\" packets.\"\
      )\n\n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [], [('msgin', 'message', 1)], [],
      'Embedded Python Block example - a simple multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1600, 272.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 92.0]
    rotation: 0
    state: true
- name: iqs_file_path
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Path to the IQs file."'
    short_id: f
    type: str
    value: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 60.0]
    rotation: 0
    state: true
- name: root_raised_cosine_filter_0
  id: root_raised_cosine_filter
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.35'
    comment: ''
    decim: in_samp_rate//demod_samp_rate
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    ntaps: in_samp_rate//baudrate*8
    samp_rate: in_samp_rate
    sym_rate: baudrate*1
    type: fir_filter_ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 276.0]
    rotation: 0
    state: true
- name: satellites_ax25_deframer_0
  id: satellites_ax25_deframer
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    g3ruh_scrambler: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    options: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1344, 268.0]
    rotation: 0
    state: true
- name: snippet_0
  id: snippet
  parameters:
    alias: ''
    code: print("\033[38;5;70mDemodulator GMSK9k6 started.\033[0m")
    comment: ''
    priority: '0'
    section: main_after_start
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1304, 52.0]
    rotation: 0
    state: true
- name: throttle_test
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Set this value to in_samp_rate to run it in real-time. The higher the
      throttle, the quicker the file is processed."'
    short_id: t
    type: intx
    value: '153600'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 60.0]
    rotation: 0
    state: enabled

connections:
- [analog_quadrature_demod_cf_0_0, '0', digital_symbol_sync_xx_0, '0']
- [blocks_file_source_0, '0', blocks_throttle2_0, '0']
- [blocks_throttle2_0, '0', root_raised_cosine_filter_0, '0']
- [digital_symbol_sync_xx_0, '0', satellites_ax25_deframer_0, '0']
- [root_raised_cosine_filter_0, '0', analog_quadrature_demod_cf_0_0, '0']
- [satellites_ax25_deframer_0, out, epy_block_0, msgin]

metadata:
  file_format: 1
  grc_version: 3.10.7.0
